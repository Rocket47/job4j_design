<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="chapter_001"><sessioninfo id="DESKTOP-CE66978-d78c0b" start="1587927300057" dump="1587927300455"/><package name="it"><class name="it/MatrixIterator" sourcefilename="MatrixIterator.java"><method name="&lt;init&gt;" desc="([[I)V" line="9"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="18"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="4" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="75"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="it/BackwardArrayIt" sourcefilename="BackwardArrayIt.java"><method name="&lt;init&gt;" desc="([I)V" line="11"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="20"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Integer;" line="25"><counter type="INSTRUCTION" missed="3" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="51"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BackwardArrayIt.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="10" mb="0" cb="2"/><line nr="25" mi="0" ci="3" mb="0" cb="2"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="1" cb="1"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="51"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatrixIterator.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="1" cb="1"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="17" mb="0" cb="4"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="1" cb="1"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="2"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="75"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="9" covered="126"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="9" covered="126"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></report>